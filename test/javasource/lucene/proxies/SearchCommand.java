// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package lucene.proxies;

/**
 * Contains a query command. Query should be a valid lucene query like
 * 'main* AND oregon'. 
 * Seperate words can not start wild a wildcard.
 */
public class SearchCommand
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject searchCommandMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Lucene.SearchCommand";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Query("Query"),
		IndexId("IndexId"),
		IndexType("IndexType"),
		SearchCommand_SearchResult("Lucene.SearchCommand_SearchResult");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public SearchCommand(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Lucene.SearchCommand"));
	}

	protected SearchCommand(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject searchCommandMendixObject)
	{
		if (searchCommandMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Lucene.SearchCommand", searchCommandMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Lucene.SearchCommand");

		this.searchCommandMendixObject = searchCommandMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'SearchCommand.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static lucene.proxies.SearchCommand initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return lucene.proxies.SearchCommand.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.getSudoContext() can be used to obtain sudo access).
	 */
	public static lucene.proxies.SearchCommand initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new lucene.proxies.SearchCommand(context, mendixObject);
	}

	public static lucene.proxies.SearchCommand load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return lucene.proxies.SearchCommand.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Query
	 */
	public final String getQuery()
	{
		return getQuery(getContext());
	}

	/**
	 * @param context
	 * @return value of Query
	 */
	public final String getQuery(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.Query.toString());
	}

	/**
	 * Set value of Query
	 * @param query
	 */
	public final void setQuery(String query)
	{
		setQuery(getContext(), query);
	}

	/**
	 * Set value of Query
	 * @param context
	 * @param query
	 */
	public final void setQuery(com.mendix.systemwideinterfaces.core.IContext context, String query)
	{
		getMendixObject().setValue(context, MemberNames.Query.toString(), query);
	}

	/**
	 * @return value of IndexId
	 */
	public final Long getIndexId()
	{
		return getIndexId(getContext());
	}

	/**
	 * @param context
	 * @return value of IndexId
	 */
	public final Long getIndexId(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (Long) getMendixObject().getValue(context, MemberNames.IndexId.toString());
	}

	/**
	 * Set value of IndexId
	 * @param indexid
	 */
	public final void setIndexId(Long indexid)
	{
		setIndexId(getContext(), indexid);
	}

	/**
	 * Set value of IndexId
	 * @param context
	 * @param indexid
	 */
	public final void setIndexId(com.mendix.systemwideinterfaces.core.IContext context, Long indexid)
	{
		getMendixObject().setValue(context, MemberNames.IndexId.toString(), indexid);
	}

	/**
	 * Set value of IndexType
	 * @param indextype
	 */
	public final lucene.proxies.IndexType getIndexType()
	{
		return getIndexType(getContext());
	}

	/**
	 * @param context
	 * @return value of IndexType
	 */
	public final lucene.proxies.IndexType getIndexType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.IndexType.toString());
		if (obj == null)
			return null;

		return lucene.proxies.IndexType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of IndexType
	 * @param indextype
	 */
	public final void setIndexType(lucene.proxies.IndexType indextype)
	{
		setIndexType(getContext(), indextype);
	}

	/**
	 * Set value of IndexType
	 * @param context
	 * @param indextype
	 */
	public final void setIndexType(com.mendix.systemwideinterfaces.core.IContext context, lucene.proxies.IndexType indextype)
	{
		if (indextype != null)
			getMendixObject().setValue(context, MemberNames.IndexType.toString(), indextype.toString());
		else
			getMendixObject().setValue(context, MemberNames.IndexType.toString(), null);
	}

	/**
	 * @return value of SearchCommand_SearchResult
	 */
	public final java.util.List<lucene.proxies.SearchResult> getSearchCommand_SearchResult() throws com.mendix.core.CoreException
	{
		return getSearchCommand_SearchResult(getContext());
	}

	/**
	 * @param context
	 * @return value of SearchCommand_SearchResult
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<lucene.proxies.SearchResult> getSearchCommand_SearchResult(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<lucene.proxies.SearchResult> result = new java.util.ArrayList<lucene.proxies.SearchResult>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.SearchCommand_SearchResult.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(lucene.proxies.SearchResult.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of SearchCommand_SearchResult
	 * @param searchcommand_searchresult
	 */
	public final void setSearchCommand_SearchResult(java.util.List<lucene.proxies.SearchResult> searchcommand_searchresult)
	{
		setSearchCommand_SearchResult(getContext(), searchcommand_searchresult);
	}

	/**
	 * Set value of SearchCommand_SearchResult
	 * @param context
	 * @param searchcommand_searchresult
	 */
	public final void setSearchCommand_SearchResult(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<lucene.proxies.SearchResult> searchcommand_searchresult)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (lucene.proxies.SearchResult proxyObject : searchcommand_searchresult)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.SearchCommand_SearchResult.toString(), identifiers);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return searchCommandMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final lucene.proxies.SearchCommand that = (lucene.proxies.SearchCommand) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Lucene.SearchCommand";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
